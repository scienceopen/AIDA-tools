<HTML>                                              
<HEAD>                                              
  <TITLE>/</TITLE>                                  
  <META NAME="GENERATOR" CONTENT="HTML-TOOLBOX ">   
</HEAD>                                             
<BODY bgcolor="#FFFFF0"> 
<HR WIDTH="100%"></P> 
<CENTER><P><FONT COLOR="#000000"><FONT SIZE=+3>Cross-linked m-file</FONT></FONT></P></CENTER> 
<CENTER><P><FONT COLOR="#000000"><FONT SIZE=+1></FONT></FONT></P></CENTER> 
<CENTER><P><FONT COLOR="#000000"><FONT SIZE=+2>spc_cal_bad_intens.m</FONT></FONT></P></CENTER> 
<CENTER><P><FONT COLOR="#000000"><FONT SIZE=+1>Located in:</FONT></FONT></P></CENTER> 
<CENTER><P><FONT COLOR="#000000"><FONT SIZE=+1>/home/bjorn/matlab/Spectral_cal</FONT></FONT></P></CENTER> 
<P><HR WIDTH="100%"></P> 
<P><FONT COLOR="#000000"><FONT SIZE=+2>Function synopsis</FONT></FONT></P> 
<P><FONT COLOR="#000000"><FONT SIZE=+1> SPEC_CAL_BAD_TIMES - Find intensity limits for each star                                                                                            </FONT></FONT></P> 
<P><HR WIDTH="100%"></P> 
<P><FONT COLOR="#000000"><FONT SIZE=+2>Function comments</FONT></FONT></P> 
<pre> 
% 
</pre> 
<P><HR WIDTH="100%"></P> 
<P><FONT COLOR="#000000"><FONT SIZE=+1>m-files that call spc_cal_bad_intens.m</FONT></FONT></P> 
<UL> 
<LI><A HREF ="Spec_cal_jobb_mall.htm">Spec_cal_jobb_mall</A></LI> 
</UL> 
<P><HR WIDTH="100%"></P> 
<P><FONT COLOR="#000000"><FONT SIZE=+1>All the cross references in the source m-code of spc_cal_bad_intens.m</FONT></FONT></P> 
<pre> 
function [GI1,GI2,GI3,GT,GX,GY,Gfilter] = spc_cal_bad_intens(inI1,inI2,inI3,inT,inX,inY,inFilter,checkfilters) 
% SPEC_CAL_BAD_TIMES - Find intensity limits for each star 
% 
 
% Copyright Bjorn Gustavsson 20030901 
 
%ffc = ffs_correction2([256 256],optpar,optpar(end-1)); 
 
clrs = ['g','r','m','m','k','b','c','c','c','c']; 
 
for si = 1:size(inI1,1), 
 
  gI1 = []; 
  gI2 = []; 
  gI3 = []; 
  gT = []; 
  gX = []; 
  gY = []; 
  gfilter = []; 
 
  % det haer blir lite foer haardkodat. kollar bara inFilter lika 
  % med 0, 1, 4, 5... 
 
  for jj = 1:length(checkfilters), 
 
    i = find(inFilter(si,:)==checkfilters(jj)); 
    ints_plot(inT(si,i),inI1(si,i),inI2(si,i),inI3(si,i),clrs(1+checkfilters(jj))) 
    title([num2str(si),' ',num2str(si/size(inI1,1))]) 
    pause 
    subplot(3,1,1) 
    [qwt,Ilim1,qweb] = ginput(2); 
% $$$     subplot(3,1,2) 
% $$$     [qwt,Ilim2,qweb] = ginput(2); 
% $$$     subplot(3,1,3) 
% $$$     [qwt,Ilim3,qweb] = ginput(2); 
    % sort out point lying outside any of the limits. 
    ii = find( min(Ilim1) < inI1(si,i) & inI1(si,i) < max(Ilim1) );%& ... 
     % 	       min(Ilim2) < inI2(si,i) & inI2(si,i) < max(Ilim2) & ... 
     %         min(Ilim3) < inI3(si,i) & inI3(si,i) < max(Ilim3) ); 
    gI1 = [gI1,inI1(si,i(ii))]; 
    gI2 = [gI2,inI2(si,i(ii))]; 
    gI3 = [gI3,inI3(si,i(ii))]; 
    gT = [gT,inT(si,i(ii))]; 
    gX = [gX,inX(si,i(ii))]; 
    gY = [gY,inY(si,i(ii))]; 
    gfilter = [gfilter,inFilter(si,i(ii))]; 
 
  end 
 
  [gT,I] = sort(gT); 
  GI1(si,1:length(gT)) = gI1(I); 
  GI2(si,1:length(gT)) = gI2(I); 
  GI3(si,1:length(gT)) = gI3(I); 
  GT(si,1:length(gT)) = gT; 
  GX(si,1:length(gT)) = gX(I); 
  GY(si,1:length(gT)) = gY(I); 
  Gfilter(si,1:length(gT)) = gfilter(I); 
 
end 
 
i = find(GX(:)==0); 
Gfilter(i) = -2; 
 
 
function ok = ints_plot(T,I1,I2,I3,clr) 
% INTS_PLOT - 
% 
 
clf 
 
if ~isempty (I1) 
  subplot(3,1,1) 
  plot(T,I1,[clr,'h']) 
  grid on 
  timetick 
  subplot(3,1,2) 
  plot(T,I2,[clr,'h']) 
  grid on 
  timetick 
  subplot(3,1,3) 
  plot(T,I3,[clr,'h']) 
  grid on 
  timetick 
end 
</pre> 
<P><HR WIDTH="100%"></P> 
<P><I><FONT COLOR="#0000FF"><FONT SIZE=+1>Written by  B. Gustavsson 16:26 3/9 2003 <IMG SRC = "file:/home/bjorn/matlab/Local/Tools/htmltool/gifs/copyright.gif" ></FONT></FONT></I></P> 
<P><I><FONT COLOR="#0000FF"><FONT SIZE=+1>E-mail:</B><A HREF = "mailto:bjorn@irf.se">bjorn@irf.se</A></H4></FONT></FONT></I></P> 
